# Workflow to build and release project artifacts
# This workflow is manually triggered via the GitHub UI

name: Build and Release

on:
  # Trigger on manual dispatch
  workflow_dispatch

# Permissions needed for the workflow
permissions:
  contents: write  # Allows the workflow to write to the repository (create tags)
  packages: write  # Allows the workflow to write to GitHub Packages (for Docker images)

jobs:
  # Job to generate a new version tag
  tagging:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.tag.outputs.new_tag }}  # Output the new tag to be used by other jobs

    steps:
      - name: Generate Tag
        id: tag
        uses: tschm/cradle/actions/tag@v0.3.06  # Custom action to generate a new tag
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}  # GitHub token for authentication
  # Job to build the package with the new version
  build:
    runs-on: ubuntu-latest
    needs: tagging  # Depends on the tagging job to get the new version
    steps:
      # Build the package (sdist and wheel) with the new version tag
      - name: build
        uses: tschm/cradle/actions/build@v0.3.06
        with:
          tag: ${{ needs.tagging.outputs.new_tag }}  # Use the tag from the previous job

  # Job to publish the built package to PyPI
  publish:
    needs: build  # Depends on the build job to have the package ready
    runs-on: ubuntu-latest
    environment: release  # Use the 'release' environment for secrets

    # Permissions needed for PyPI trusted publishing
    permissions:
      contents: read  # Only need read access to the repository
      id-token: write  # Required for trusted publishing to PyPI

    steps:
      # Check out the repository code
      - name: Checkout [${{ github.repository }}]
        uses: actions/checkout@v4

      # Download the built package artifacts from the build job
      - uses: actions/download-artifact@v5
        with:
          name: dist  # Artifact name containing the built packages
          path: dist  # Local path to download to

      # Publish the package to PyPI using trusted publishing
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1  # Official PyPI publishing actio
